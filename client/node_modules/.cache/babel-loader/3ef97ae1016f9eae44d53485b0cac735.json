{"ast":null,"code":"var _jsxFileName = \"/Users/robertkowalski/Desktop/Code/Projects/project3/client/src/pages/Bucket.js\";\nimport React, { Component } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\n\nclass Buckets extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      bucketList: [],\n      activity: \"\",\n      author: \"\",\n      description: \"\",\n      image: \"\"\n    };\n\n    this.loadBuckets = () => {\n      API.getBuckets().then(res => this.setState({\n        bucketList: res.data,\n        activity: \"\",\n        author: \"\",\n        description: \"\"\n      })).catch(err => console.log(err));\n    };\n\n    this.handleInputChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n\n      if (this.state.activity && this.state.author) {\n        API.saveBucket({\n          activity: this.state.activity,\n          author: this.state.author,\n          description: this.state.description\n        }).then(res => this.loadBuckets()).catch(err => console.log(err));\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.loadBuckets();\n  }\n\n  deleteBucket() {\n    console.log(\"id = \" + id);\n    API.deleteBucket(id).then(res => loadBuckets()).catch(err => console.log(err));\n  }\n\n  render() {\n    return React.createElement(Container, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Col, {\n      size: \"md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"What activity should I do?\")), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Input, {\n      value: this.state.activity,\n      onChange: this.handleInputChange,\n      name: \"activity\",\n      placeholder: \"Activity (required)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Input, {\n      value: this.state.author,\n      onChange: this.handleInputChange,\n      name: \"author\",\n      placeholder: \"Author (required)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(TextArea, {\n      value: this.state.description,\n      onChange: this.handleInputChange,\n      name: \"description\",\n      placeholder: \"Description (Optional)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(FormBtn, {\n      disabled: !(this.state.author && this.state.activity),\n      onClick: this.handleFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Submit Activity\"))), React.createElement(Col, {\n      size: \"md-6 sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Other Bucket Activities\")), this.state.bucketList.length ? React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, this.state.bucketList.map(listItem => React.createElement(ListItem, {\n      key: listItem._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/buckets/\" + listItem._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, listItem.activity, \" by \", listItem.author)), React.createElement(DeleteBtn, {\n      onClick: () => this.deleteBucket(listItem._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })))) : React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"No Results to Display\"))));\n  }\n\n}\n\nexport default Buckets;","map":{"version":3,"sources":["/Users/robertkowalski/Desktop/Code/Projects/project3/client/src/pages/Bucket.js"],"names":["React","Component","DeleteBtn","Jumbotron","API","Link","Col","Row","Container","List","ListItem","Input","TextArea","FormBtn","Buckets","state","bucketList","activity","author","description","image","loadBuckets","getBuckets","then","res","setState","data","catch","err","console","log","handleInputChange","event","target","name","value","handleFormSubmit","preventDefault","saveBucket","componentDidMount","deleteBucket","id","render","length","map","listItem","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,oBAApC;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,oBAA/B;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,OAA1B,QAAyC,oBAAzC;;AAEA,MAAMC,OAAN,SAAsBb,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC9Bc,KAD8B,GACtB;AACNC,MAAAA,UAAU,EAAE,EADN;AAENC,MAAAA,QAAQ,EAAE,EAFJ;AAGNC,MAAAA,MAAM,EAAE,EAHF;AAINC,MAAAA,WAAW,EAAE,EAJP;AAKNC,MAAAA,KAAK,EAAE;AALD,KADsB;;AAAA,SAa9BC,WAb8B,GAahB,MAAM;AAClBjB,MAAAA,GAAG,CAACkB,UAAJ,GACGC,IADH,CACQC,GAAG,IACP,KAAKC,QAAL,CAAc;AAAET,QAAAA,UAAU,EAAEQ,GAAG,CAACE,IAAlB;AAAwBT,QAAAA,QAAQ,EAAE,EAAlC;AAAsCC,QAAAA,MAAM,EAAE,EAA9C;AAAkDC,QAAAA,WAAW,EAAE;AAA/D,OAAd,CAFJ,EAIGQ,KAJH,CAISC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJhB;AAKD,KAnB6B;;AAAA,SA4B9BG,iBA5B8B,GA4BVC,KAAK,IAAI;AAAA,4BACHA,KAAK,CAACC,MADH;AAAA,YACnBC,IADmB,iBACnBA,IADmB;AAAA,YACbC,KADa,iBACbA,KADa;AAE3B,WAAKV,QAAL,CAAc;AACZ,SAACS,IAAD,GAAQC;AADI,OAAd;AAGD,KAjC6B;;AAAA,SAmC9BC,gBAnC8B,GAmCXJ,KAAK,IAAI;AAC1BA,MAAAA,KAAK,CAACK,cAAN;;AACA,UAAI,KAAKtB,KAAL,CAAWE,QAAX,IAAuB,KAAKF,KAAL,CAAWG,MAAtC,EAA8C;AAC5Cd,QAAAA,GAAG,CAACkC,UAAJ,CAAe;AACbrB,UAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE,QADR;AAEbC,UAAAA,MAAM,EAAE,KAAKH,KAAL,CAAWG,MAFN;AAGbC,UAAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWI;AAHX,SAAf,EAKGI,IALH,CAKQC,GAAG,IAAI,KAAKH,WAAL,EALf,EAMGM,KANH,CAMSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANhB;AAOD;AACF,KA9C6B;AAAA;;AAS9BW,EAAAA,iBAAiB,GAAG;AAClB,SAAKlB,WAAL;AACD;;AAUDmB,EAAAA,YAAY,GAAI;AACdX,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAUW,EAAtB;AACArC,IAAAA,GAAG,CAACoC,YAAJ,CAAiBC,EAAjB,EACGlB,IADH,CACQC,GAAG,IAAIH,WAAW,EAD1B,EAEGM,KAFH,CAESC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFhB;AAGD;;AAsBDc,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAC,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,EAAE,KAAK3B,KAAL,CAAWE,QADpB;AAEE,MAAA,QAAQ,EAAE,KAAKc,iBAFjB;AAGE,MAAA,IAAI,EAAC,UAHP;AAIE,MAAA,WAAW,EAAC,qBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOE,oBAAC,KAAD;AACE,MAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWG,MADpB;AAEE,MAAA,QAAQ,EAAE,KAAKa,iBAFjB;AAGE,MAAA,IAAI,EAAC,QAHP;AAIE,MAAA,WAAW,EAAC,mBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,EAaE,oBAAC,QAAD;AACE,MAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWI,WADpB;AAEE,MAAA,QAAQ,EAAE,KAAKY,iBAFjB;AAGE,MAAA,IAAI,EAAC,aAHP;AAIE,MAAA,WAAW,EAAC,wBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,EAmBE,oBAAC,OAAD;AACE,MAAA,QAAQ,EAAE,EAAE,KAAKhB,KAAL,CAAWG,MAAX,IAAqB,KAAKH,KAAL,CAAWE,QAAlC,CADZ;AAEE,MAAA,OAAO,EAAE,KAAKmB,gBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAnBF,CAJF,CADF,EAgCE,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAC,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,CADF,EAIG,KAAKrB,KAAL,CAAWC,UAAX,CAAsB2B,MAAtB,GACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAK5B,KAAL,CAAWC,UAAX,CAAsB4B,GAAtB,CAA0BC,QAAQ,IACjC,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,QAAQ,CAACC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAE,cAAcD,QAAQ,CAACC,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,QAAQ,CAAC5B,QADZ,UAC0B4B,QAAQ,CAAC3B,MADnC,CADF,CADF,EAME,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAE,MAAM,KAAKsB,YAAL,CAAkBK,QAAQ,CAACC,GAA3B,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADD,CADH,CADD,GAcC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAlBJ,CAhCF,CADF,CADF;AA0DD;;AA3G6B;;AA8GhC,eAAehC,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\n\nclass Buckets extends Component {\n  state = {\n    bucketList: [],\n    activity: \"\",\n    author: \"\",\n    description: \"\",\n    image: \"\"\n  };\n\n  componentDidMount() {\n    this.loadBuckets();\n  }\n\n  loadBuckets = () => {\n    API.getBuckets()\n      .then(res =>\n        this.setState({ bucketList: res.data, activity: \"\", author: \"\", description: \"\",})\n      )\n      .catch(err => console.log(err));\n  };\n\n  deleteBucket () {\n    console.log(\"id = \" + id)\n    API.deleteBucket(id)\n      .then(res => loadBuckets())\n      .catch(err => console.log(err));\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    if (this.state.activity && this.state.author) {\n      API.saveBucket({\n        activity: this.state.activity,\n        author: this.state.author,\n        description: this.state.description\n      })\n        .then(res => this.loadBuckets())\n        .catch(err => console.log(err));\n    }\n  };\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-6\">\n            <Jumbotron>\n              <h1>What activity should I do?</h1>\n            </Jumbotron>\n            <form>\n              <Input\n                value={this.state.activity}\n                onChange={this.handleInputChange}\n                name=\"activity\"\n                placeholder=\"Activity (required)\"\n              />\n              <Input\n                value={this.state.author}\n                onChange={this.handleInputChange}\n                name=\"author\"\n                placeholder=\"Author (required)\"\n              />\n              <TextArea\n                value={this.state.description}\n                onChange={this.handleInputChange}\n                name=\"description\"\n                placeholder=\"Description (Optional)\"\n              />\n              <FormBtn\n                disabled={!(this.state.author && this.state.activity)}\n                onClick={this.handleFormSubmit}\n              >\n                Submit Activity \n              </FormBtn>\n            </form>\n          </Col>\n          <Col size=\"md-6 sm-12\">\n            <Jumbotron>\n              <h1>Other Bucket Activities</h1>\n            </Jumbotron>\n            {this.state.bucketList.length ? (\n              <List>\n                {this.state.bucketList.map(listItem => (\n                  <ListItem key={listItem._id}>\n                    <Link to={\"/buckets/\" + listItem._id}>\n                      <strong>\n                        {listItem.activity} by {listItem.author}\n                      </strong>\n                    </Link>\n                    <DeleteBtn onClick={() => this.deleteBucket(listItem._id)} />\n                  </ListItem>\n                ))}\n              </List>\n            ) : (\n              <h3>No Results to Display</h3>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Buckets;"]},"metadata":{},"sourceType":"module"}